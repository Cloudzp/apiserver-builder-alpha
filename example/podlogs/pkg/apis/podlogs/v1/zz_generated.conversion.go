// +build !ignore_autogenerated

/*
Copyright 2019 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1

import (
	unsafe "unsafe"

	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	podlogs "sigs.k8s.io/apiserver-builder-alpha/example/podlogs/pkg/apis/podlogs"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*Pod)(nil), (*podlogs.Pod)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_Pod_To_podlogs_Pod(a.(*Pod), b.(*podlogs.Pod), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*podlogs.Pod)(nil), (*Pod)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_podlogs_Pod_To_v1_Pod(a.(*podlogs.Pod), b.(*Pod), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*PodList)(nil), (*podlogs.PodList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_PodList_To_podlogs_PodList(a.(*PodList), b.(*podlogs.PodList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*podlogs.PodList)(nil), (*PodList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_podlogs_PodList_To_v1_PodList(a.(*podlogs.PodList), b.(*PodList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*PodLogs)(nil), (*podlogs.PodLogs)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_PodLogs_To_podlogs_PodLogs(a.(*PodLogs), b.(*podlogs.PodLogs), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*podlogs.PodLogs)(nil), (*PodLogs)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_podlogs_PodLogs_To_v1_PodLogs(a.(*podlogs.PodLogs), b.(*PodLogs), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*PodLogsList)(nil), (*podlogs.PodLogsList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_PodLogsList_To_podlogs_PodLogsList(a.(*PodLogsList), b.(*podlogs.PodLogsList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*podlogs.PodLogsList)(nil), (*PodLogsList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_podlogs_PodLogsList_To_v1_PodLogsList(a.(*podlogs.PodLogsList), b.(*PodLogsList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*PodSpec)(nil), (*podlogs.PodSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_PodSpec_To_podlogs_PodSpec(a.(*PodSpec), b.(*podlogs.PodSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*podlogs.PodSpec)(nil), (*PodSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_podlogs_PodSpec_To_v1_PodSpec(a.(*podlogs.PodSpec), b.(*PodSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*PodStatus)(nil), (*podlogs.PodStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_PodStatus_To_podlogs_PodStatus(a.(*PodStatus), b.(*podlogs.PodStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*podlogs.PodStatus)(nil), (*PodStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_podlogs_PodStatus_To_v1_PodStatus(a.(*podlogs.PodStatus), b.(*PodStatus), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1_Pod_To_podlogs_Pod(in *Pod, out *podlogs.Pod, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1_PodSpec_To_podlogs_PodSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1_PodStatus_To_podlogs_PodStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_Pod_To_podlogs_Pod is an autogenerated conversion function.
func Convert_v1_Pod_To_podlogs_Pod(in *Pod, out *podlogs.Pod, s conversion.Scope) error {
	return autoConvert_v1_Pod_To_podlogs_Pod(in, out, s)
}

func autoConvert_podlogs_Pod_To_v1_Pod(in *podlogs.Pod, out *Pod, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_podlogs_PodSpec_To_v1_PodSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_podlogs_PodStatus_To_v1_PodStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_podlogs_Pod_To_v1_Pod is an autogenerated conversion function.
func Convert_podlogs_Pod_To_v1_Pod(in *podlogs.Pod, out *Pod, s conversion.Scope) error {
	return autoConvert_podlogs_Pod_To_v1_Pod(in, out, s)
}

func autoConvert_v1_PodList_To_podlogs_PodList(in *PodList, out *podlogs.PodList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]podlogs.Pod)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1_PodList_To_podlogs_PodList is an autogenerated conversion function.
func Convert_v1_PodList_To_podlogs_PodList(in *PodList, out *podlogs.PodList, s conversion.Scope) error {
	return autoConvert_v1_PodList_To_podlogs_PodList(in, out, s)
}

func autoConvert_podlogs_PodList_To_v1_PodList(in *podlogs.PodList, out *PodList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]Pod)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_podlogs_PodList_To_v1_PodList is an autogenerated conversion function.
func Convert_podlogs_PodList_To_v1_PodList(in *podlogs.PodList, out *PodList, s conversion.Scope) error {
	return autoConvert_podlogs_PodList_To_v1_PodList(in, out, s)
}

func autoConvert_v1_PodLogs_To_podlogs_PodLogs(in *PodLogs, out *podlogs.PodLogs, s conversion.Scope) error {
	out.Container = in.Container
	out.Follow = in.Follow
	out.Previous = in.Previous
	out.SinceSeconds = (*int64)(unsafe.Pointer(in.SinceSeconds))
	out.SinceTime = (*metav1.Time)(unsafe.Pointer(in.SinceTime))
	out.Timestamps = in.Timestamps
	out.TailLines = (*int64)(unsafe.Pointer(in.TailLines))
	out.LimitBytes = (*int64)(unsafe.Pointer(in.LimitBytes))
	return nil
}

// Convert_v1_PodLogs_To_podlogs_PodLogs is an autogenerated conversion function.
func Convert_v1_PodLogs_To_podlogs_PodLogs(in *PodLogs, out *podlogs.PodLogs, s conversion.Scope) error {
	return autoConvert_v1_PodLogs_To_podlogs_PodLogs(in, out, s)
}

func autoConvert_podlogs_PodLogs_To_v1_PodLogs(in *podlogs.PodLogs, out *PodLogs, s conversion.Scope) error {
	out.Container = in.Container
	out.Follow = in.Follow
	out.Previous = in.Previous
	out.SinceSeconds = (*int64)(unsafe.Pointer(in.SinceSeconds))
	out.SinceTime = (*metav1.Time)(unsafe.Pointer(in.SinceTime))
	out.Timestamps = in.Timestamps
	out.TailLines = (*int64)(unsafe.Pointer(in.TailLines))
	out.LimitBytes = (*int64)(unsafe.Pointer(in.LimitBytes))
	return nil
}

// Convert_podlogs_PodLogs_To_v1_PodLogs is an autogenerated conversion function.
func Convert_podlogs_PodLogs_To_v1_PodLogs(in *podlogs.PodLogs, out *PodLogs, s conversion.Scope) error {
	return autoConvert_podlogs_PodLogs_To_v1_PodLogs(in, out, s)
}

func autoConvert_v1_PodLogsList_To_podlogs_PodLogsList(in *PodLogsList, out *podlogs.PodLogsList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]podlogs.PodLogs)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1_PodLogsList_To_podlogs_PodLogsList is an autogenerated conversion function.
func Convert_v1_PodLogsList_To_podlogs_PodLogsList(in *PodLogsList, out *podlogs.PodLogsList, s conversion.Scope) error {
	return autoConvert_v1_PodLogsList_To_podlogs_PodLogsList(in, out, s)
}

func autoConvert_podlogs_PodLogsList_To_v1_PodLogsList(in *podlogs.PodLogsList, out *PodLogsList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]PodLogs)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_podlogs_PodLogsList_To_v1_PodLogsList is an autogenerated conversion function.
func Convert_podlogs_PodLogsList_To_v1_PodLogsList(in *podlogs.PodLogsList, out *PodLogsList, s conversion.Scope) error {
	return autoConvert_podlogs_PodLogsList_To_v1_PodLogsList(in, out, s)
}

func autoConvert_v1_PodSpec_To_podlogs_PodSpec(in *PodSpec, out *podlogs.PodSpec, s conversion.Scope) error {
	return nil
}

// Convert_v1_PodSpec_To_podlogs_PodSpec is an autogenerated conversion function.
func Convert_v1_PodSpec_To_podlogs_PodSpec(in *PodSpec, out *podlogs.PodSpec, s conversion.Scope) error {
	return autoConvert_v1_PodSpec_To_podlogs_PodSpec(in, out, s)
}

func autoConvert_podlogs_PodSpec_To_v1_PodSpec(in *podlogs.PodSpec, out *PodSpec, s conversion.Scope) error {
	return nil
}

// Convert_podlogs_PodSpec_To_v1_PodSpec is an autogenerated conversion function.
func Convert_podlogs_PodSpec_To_v1_PodSpec(in *podlogs.PodSpec, out *PodSpec, s conversion.Scope) error {
	return autoConvert_podlogs_PodSpec_To_v1_PodSpec(in, out, s)
}

func autoConvert_v1_PodStatus_To_podlogs_PodStatus(in *PodStatus, out *podlogs.PodStatus, s conversion.Scope) error {
	return nil
}

// Convert_v1_PodStatus_To_podlogs_PodStatus is an autogenerated conversion function.
func Convert_v1_PodStatus_To_podlogs_PodStatus(in *PodStatus, out *podlogs.PodStatus, s conversion.Scope) error {
	return autoConvert_v1_PodStatus_To_podlogs_PodStatus(in, out, s)
}

func autoConvert_podlogs_PodStatus_To_v1_PodStatus(in *podlogs.PodStatus, out *PodStatus, s conversion.Scope) error {
	return nil
}

// Convert_podlogs_PodStatus_To_v1_PodStatus is an autogenerated conversion function.
func Convert_podlogs_PodStatus_To_v1_PodStatus(in *podlogs.PodStatus, out *PodStatus, s conversion.Scope) error {
	return autoConvert_podlogs_PodStatus_To_v1_PodStatus(in, out, s)
}
